namespace miradi = "http://xml.miradi.org/schema/project/version/1"

#
start = miradi_project.element
#
miradi_project.element =
    element miradi:conservation_project {
        ProjectSummary.element &
        fos_data.element &
        rare_data.element &
        tnc_data.element &
        wcs_data.element &
        wwf_data.element &
        
        resources.element &
        accounting_codes.element &
        funding_sources.element &
        
        conceptual_models.element &
        results_chains.element &
        diagram_factors.element &
        
        targets.element &
        causes.element &
        strategies.element &
        threat_reduction_results.element &
        intermediate_results.element &
        text_boxes.element &
        group_boxes.element &
        
        objectives.element &
        indicators.element &
        stresses.element &
        key_ecological_attributes.element &
        
        activities.element &
        methods.element &
        tasks.element &
        
        threat_ratings.element &
        viability_ratings.element &
    }
    
%ProjectSummary

fos_data.element =
    element miradi:fos_data 
    {
    }

rare_data.element =
    element miradi:rare_data 
    {
    }

tnc_data.element =
    element miradi:tnc_data 
    {
    }

wcs_data.element =
    element miradi:wcs_data 
    {
    }

wwf_data.element =
    element miradi:wwf_data 
    {
    }

resources.element =
    element miradi:resources 
    {
    }

accounting_codes.element =
    element miradi:accounting_codes 
    {
    }

funding_sources.element =
    element miradi:funding_sources 
    {
    }

conceptual_models.element =
    element miradi:conceptual_models
    {
    }

results_chains.element =
    element miradi:results_chains 
    {
    }

diagram_factors.element =
    element miradi:diagram_factors 
    {
    }

targets.element =
    element miradi:targets 
    {
    }

causes.element =
    element miradi:causes 
    {
    }

strategies.element =
    element miradi:strategies 
    {
    }

threat_reduction_results.element =
    element miradi:threat_reduction_results
    {
    }

intermediate_results.element =
    element miradi:intermediate_results 
    {
    }

text_boxes.element =
    element miradi:text_boxes 
    {
    }

group_boxes.element =
    element miradi:group_boxes 
    {
    }

objectives.element =
    element miradi:objectives 
    {
    }

indicators.element =
    element miradi:indicators 
    {
    }

stresses.element =
    element miradi:stresses 
    {
    }

key_ecological_indicators.element =
    element miradi:key_ecological_indicators 
    {
    }

activities.element =
    element miradi:activities 
    {
    }

methods.element =
    element miradi:methods 
    {
    }

tasks.element =
    element miradi:tasks 
    {
    }

threat_ratings.element =
    element miradi:threat_ratings 
    {
    }

viability_ratings.element =
    element miradi:viability_ratings 
    {
    }


vocabulary_id = xsd:nonNegativeInteger
vocabulary_date = xsd:string { pattern = "[0-9]{4}-[0-9]{2}-[0-9]{2}" }
vocabulary_non_empty_string = xsd:string { minLength = "1" }

vocabulary_area_unit = "hectares"
vocabulary_country = xsd:string { pattern = "[A-Z]{3}" }
vocabulary_ecoregion = xsd:string { pattern = "[123][\d]{4}" }
vocabulary_geospatial_type = "point"

[
    documentation [
        "International Union for Conservation of Nature (IUCN) threat, \x{a}" ~
        "habitat and strategy taxonomy formats:"
    ]
]
iucn_habitat_taxonomy = xsd:NMTOKEN { pattern = "[H][0-9]{2,3}\.[0-9]{2,3}" }
iucn_strategy_taxonomy = xsd:NMTOKEN { pattern = "[A][0-9]{2,3}\.[0-9]{2,3}" }
iucn_threat_taxonomy = xsd:NMTOKEN { pattern = "[T][0-9]{2,3}\.[0-9]{2,3}" }

# 
# 
# Datatyping reference
# xsd:boolean -  Its value space is true and false. Its lexical space accepts
#                true, false, 1 and 0
# vocabulary_date - Its lexical space is the ISO 8601 extended format
#                [-]CCYY-MM-DD[Z|(+|-)hh:mm] with an optional time zone.
# xsd:decimal -  The set of all decimal numbers with arbitrary lengths.
#                Its lexical space allows any number of insignificant leading
#                and, after the decimal point, trailing zeros. A period is the
#                only acceptable decimal seperator. No thousands seperators
#                allowed.
# xsd:integer -  Integer is derived from decimal by fixing the value of
#                fractionDigits to be 0 and disallowing the trailing decimal
#                point. This results in the standard mathematical concept of
#                the integer numbers. The value space of integer is the
#                infinite set {...,-2,-1,0,1,2,...}.
# xsd:nonNegativeInteger - nonNegativeInteger is derived from integer by
#                setting the value of minInclusive to be 0. This results in
#                the standard mathematical concept of the non-negative
#                integers. The value space of nonNegativeInteger is the
#                infinite set {0,1,2,...}.
# xsd:positiveInteger - positiveInteger is derived from nonNegativeInteger
#                by setting the value of minInclusive to be 1. This results
#                in the standard mathematical concept of the positive integer
#                numbers. The value space of positiveInteger is the infinite
#                set {1,2,...}.
# xsd:string -   The lexical and value spaces are the set of all possible
#                strings composed of any charachter allowed in a XML 1.0
#                document without any treatment done on whitespace. That is
#                the only datatype that leaves all the whitespace. When
#                whitespace isn't significant, xsd:token is preferred.
# 
#  * - 0 or more
#  + - 1 or more
#  ? - Optional
